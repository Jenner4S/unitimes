<%--
 * Licensed to The Apereo Foundation under one or more contributor license
 * agreements. See the NOTICE file distributed with this work for
 * additional information regarding copyright ownership.
 *
 * The Apereo Foundation licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at:
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
--%>
<%@page import="org.unitime.timetable.StartupService"%>
<%@page import="org.unitime.timetable.spring.SpringApplicationContextHolder"%>
<%@page import="org.unitime.timetable.util.Constants"%>
<% StartupService service = (StartupService)SpringApplicationContextHolder.getBean("startupService"); %>
<% if (service.getInitializationException() != null) { %>
<div class='unitime-InitializationError'>
	UniTime <%=Constants.getVersion()%> failed to start up properly, please check the application log for more details.<br/>
	<%
	Throwable t = service.getInitializationException();
	while (t != null) {
		String clazz = t.getClass().getName();
		if (clazz.indexOf('.') >= 0) clazz = clazz.substring(1 + clazz.lastIndexOf('.'));
		out.println("<br>" + clazz + ": " + t.getMessage() + (t.getStackTrace() != null && t.getStackTrace().length > 0 ? " (at " + t.getStackTrace()[0].getFileName() + ":" + t.getStackTrace()[0].getLineNumber() + ")": ""));
		t = t.getCause();
	}
	%>
</div>	
<% } %>